% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_class.R
\name{base_class}
\alias{base_class}
\title{base_class}
\value{
a \code{base_class} class (R6 class)
}
\description{
R6 class for providing additional default R6 class features
}
\examples{

new_class = R6::R6Class(
  "new_class",
  inherit = base_class,
  portable = TRUE,

  public = list(
    ...
  ),
  private = list(
    ...
  )
)

Initialize object

Allow list based function initialization (easier to integrate with config files)


## ------------------------------------------------
## Method `base_class$dump`
## ------------------------------------------------


obj = some_R6_class$new()
obj$dump()
data = tmpVar$some_private_var_name
data = tmpVar[["some_private_var_name"]]

Get variable

Gets a private variables value.


## ------------------------------------------------
## Method `base_class$get_var`
## ------------------------------------------------


obj = some_R6_class$new()
var_value = obj$get_var("var_name")

Set variable

Sets a private variables value.
This method is chainable.


## ------------------------------------------------
## Method `base_class$set_var`
## ------------------------------------------------


obj = some_R6_class$new()
obj$set_var("var_name", var_value)

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{base_class$new()}}
\item \href{#method-dump}{\code{base_class$dump()}}
\item \href{#method-get_var}{\code{base_class$get_var()}}
\item \href{#method-set_var}{\code{base_class$set_var()}}
\item \href{#method-clone}{\code{base_class$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{base_class$new(argList = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{argList}}{A 'List' of name/value pairs to be passed in as arguments.}

\item{\code{...}}{Name/Value pairs as arguments.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
none Nothing is returned

Dump object values

Convenient for debugging private class values (puts var named tmpVar in global environment)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dump"></a>}}
\if{latex}{\out{\hypertarget{method-dump}{}}}
\subsection{Method \code{dump()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{base_class$dump()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
private The private environment of the object
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
obj = some_R6_class$new()
obj$dump()
data = tmpVar$some_private_var_name
data = tmpVar[["some_private_var_name"]]

Get variable

Gets a private variables value.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_var"></a>}}
\if{latex}{\out{\hypertarget{method-get_var}{}}}
\subsection{Method \code{get_var()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{base_class$get_var(var_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{var_name}}{The name of the private variable to return.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
var The value of the requested variable.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
obj = some_R6_class$new()
var_value = obj$get_var("var_name")

Set variable

Sets a private variables value.
This method is chainable.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_var"></a>}}
\if{latex}{\out{\hypertarget{method-set_var}{}}}
\subsection{Method \code{set_var()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{base_class$set_var(var_name, var_value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{var_name}}{The name of the private variable to set.}

\item{\code{var_value}}{The value to assign to the desired private variable.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object_ref The reference to the original object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
obj = some_R6_class$new()
obj$set_var("var_name", var_value)

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{base_class$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
