% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/namc_oauth2.R
\name{namc_oauth2}
\alias{namc_oauth2}
\title{namc_oauth2}
\value{
a `namc_oauth2` class (R6 class)
}
\description{
R6 class for handling NAMC oAuth2
}
\examples{

auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)


## ------------------------------------------------
## Method `namc_oauth2$set_connection_details`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$set_connection_details("XXXXXXXXXX", "namc.XXXXXXX.edu")

Get user info

Gets the user information from the auth provider once authenticated.


## ------------------------------------------------
## Method `namc_oauth2$get_user_info`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
user_info = auth$get_user_info()

Get oAuth2 token

Gets and oAuth2 token object which can be used for subsequent connections.
A stop error occurs if this authentication object has not been configured via
set_connection_details().


## ------------------------------------------------
## Method `namc_oauth2$get_token`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
oauth_token = auth$get_token()

Get access token

Extracts the access token from the cached oAuth2 credential. This is
used for the Bearer Authentication header.


## ------------------------------------------------
## Method `namc_oauth2$get_access_token`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
oauth_access_token = auth$get_access_token()

Check refresh token

Check if the oAuth2 token needs refreshing


## ------------------------------------------------
## Method `namc_oauth2$requires_refresh`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$requires_refresh()

Refresh token

Refreshes the oAuth2 token


## ------------------------------------------------
## Method `namc_oauth2$refresh_token`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$refresh_token()

Reset token

Deletes cached token file .httr-oauth


## ------------------------------------------------
## Method `namc_oauth2$reset_token`
## ------------------------------------------------


auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$reset_token()

}
\section{Super class}{
\code{\link[NAMCr:base_class]{NAMCr::base_class}} -> \code{namc_oauth2}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{is_configured}}{shows the configured state of the namc_oauth2 object
Set connection details

Sets the clientID and URL for the authentication provider}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-set_connection_details}{\code{namc_oauth2$set_connection_details()}}
\item \href{#method-get_user_info}{\code{namc_oauth2$get_user_info()}}
\item \href{#method-get_token}{\code{namc_oauth2$get_token()}}
\item \href{#method-get_access_token}{\code{namc_oauth2$get_access_token()}}
\item \href{#method-requires_refresh}{\code{namc_oauth2$requires_refresh()}}
\item \href{#method-refresh_token}{\code{namc_oauth2$refresh_token()}}
\item \href{#method-reset_token}{\code{namc_oauth2$reset_token()}}
\item \href{#method-clone}{\code{namc_oauth2$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="NAMCr" data-topic="base_class" data-id="dump">}\href{../../NAMCr/html/base_class.html#method-dump}{\code{NAMCr::base_class$dump()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="NAMCr" data-topic="base_class" data-id="get_var">}\href{../../NAMCr/html/base_class.html#method-get_var}{\code{NAMCr::base_class$get_var()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="NAMCr" data-topic="base_class" data-id="initialize">}\href{../../NAMCr/html/base_class.html#method-initialize}{\code{NAMCr::base_class$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="NAMCr" data-topic="base_class" data-id="set_var">}\href{../../NAMCr/html/base_class.html#method-set_var}{\code{NAMCr::base_class$set_var()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_connection_details"></a>}}
\if{latex}{\out{\hypertarget{method-set_connection_details}{}}}
\subsection{Method \code{set_connection_details()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$set_connection_details(IAM_clientId, IAM_domain)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{IAM_clientId}}{string The auth clientID.}

\item{\code{IAM_domain}}{string The auth domain name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
namc_oauth2 An R6 class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$set_connection_details("XXXXXXXXXX", "namc.XXXXXXX.edu")

Get user info

Gets the user information from the auth provider once authenticated.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_user_info"></a>}}
\if{latex}{\out{\hypertarget{method-get_user_info}{}}}
\subsection{Method \code{get_user_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$get_user_info()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list A list containing the available user data.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
user_info = auth$get_user_info()

Get oAuth2 token

Gets and oAuth2 token object which can be used for subsequent connections.
A stop error occurs if this authentication object has not been configured via
set_connection_details().

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_token"></a>}}
\if{latex}{\out{\hypertarget{method-get_token}{}}}
\subsection{Method \code{get_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$get_token(auto_refresh = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auto_refresh}}{Logical TRUE/FALSE to override the objects default behavior}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list An oAuth2 token structure from httr::oauth2.0_token
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
oauth_token = auth$get_token()

Get access token

Extracts the access token from the cached oAuth2 credential. This is
used for the Bearer Authentication header.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_access_token"></a>}}
\if{latex}{\out{\hypertarget{method-get_access_token}{}}}
\subsection{Method \code{get_access_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$get_access_token()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
string The oAuth2 access token
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
oauth_access_token = auth$get_access_token()

Check refresh token

Check if the oAuth2 token needs refreshing

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-requires_refresh"></a>}}
\if{latex}{\out{\hypertarget{method-requires_refresh}{}}}
\subsection{Method \code{requires_refresh()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$requires_refresh()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
namc_oauth2 An R6 class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$requires_refresh()

Refresh token

Refreshes the oAuth2 token

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-refresh_token"></a>}}
\if{latex}{\out{\hypertarget{method-refresh_token}{}}}
\subsection{Method \code{refresh_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$refresh_token()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
namc_oauth2 An R6 class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$refresh_token()

Reset token

Deletes cached token file .httr-oauth

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-reset_token"></a>}}
\if{latex}{\out{\hypertarget{method-reset_token}{}}}
\subsection{Method \code{reset_token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$reset_token()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
namc_oauth2 An R6 class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
auth_config = list(...) # namc_oauth2 public or private variables
auth = namc_oauth2$new(argList = auth_config)
auth$reset_token()

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{namc_oauth2$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
